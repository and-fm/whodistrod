user  nginx;
worker_processes auto;

error_log  stderr;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout;
    error_log  /dev/stdout;

    # Performance
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    keepalive_requests 1000;
    types_hash_max_size 2048;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        font/ttf
        font/otf
        image/svg+xml;

    server {
        listen       8080;
        server_name  localhost;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ $uri.html /index.html;
        }

        location /api/ {
            access_log off;
            proxy_intercept_errors on;
            proxy_connect_timeout 30;
            proxy_send_timeout 30;
            proxy_read_timeout 30;

            proxy_set_header    X-Real-IP  $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header    Host $http_host;
            proxy_redirect      off;
            proxy_pass http://127.0.0.1:8080/;
        }


        # Cache stuff - probs dont want to do this here, let cf take care of it

        # location ~* \.(?:ico|css|js|gif|svg|jpe?g|png|webp|mp4|m4a|webm|ogg|opus|woff2?|eot|ttf|map)$ {
        #     expires 30d;
        #     add_header Cache-Control "public";
        # }

        # location ~* \.(?:json)$ {
        #     expires 1d;
        #     add_header Cache-Control "public";
        # }

        # error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   /usr/share/nginx/html;
        # }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        # Healthchecks
        location /healthz {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /readyz {
            return 200 "ready\n";
            add_header Content-Type text/plain;
        }
    }
}